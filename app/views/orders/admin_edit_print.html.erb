<h2><%= @title %></h2>

<% key = Rails.application.config.session_options[:key] %>

<%= content_for :scripts do %>
  <script type="text/javascript">
    var upload_params = {
      '<%= key %>' : '<%= cookies[key] %>',
      '<%= request_forgery_protection_token %>' : '<%= form_authenticity_token %>',
      '_http_accept': 'application/javascript'
    };

    var url = $('input#document_docfile').attr('rel');

    $('input#document_docfile').uploadify({
      uploader : '/assets/uploadify/uploadify.swf',
      buttonImg : '/assets/uploadify/upload_button.png',
      script : url,
      fileDataName : 'document[docfile]',
      fileDesc : 'Images (.png, .jpg, .jpeg)',
      fileExt : '*.png;*.jpg;*.jpeg;*.JPG',
      sizeLimit : 10240000, //10MB
      cancelImg : '/assets/uploadify/cancel.png',
      multi : true,
      scriptData : upload_params,
      auto : true,
      onComplete : function(e, id, obj, response, data) {
        $('#fileList').append(response);
       },
      onAllComplete : function(){
        var status_fileList_header = $("#fileList_header").attr("style"),
            order_id = $("form.edit_print_order").attr("id"),
			url_for_update_document = "/document/price_update";
            url_for_update_order = "/order/ajaxupdate",
            url_for_load_paper_sizes = "/document/get_paper_sizes",
            url_for_load_paper_types = "/document/get_paper_types",
            url_for_load_print_margins = "/document/get_print_margins";

        if (status_fileList_header == 'display: none;') {
          $("#fileList_header").fadeIn("slow");
        }
        
        //load paper_sizes------------------------------------------------------------------------------------
        $("select[name*='paper_size']:not([class*='with_loaded_paper_sizes'])").addClass("with_loaded_paper_sizes").load(url_for_load_paper_sizes, function(){$(this).change()});

        //change handler for load paper_types
        $("select[name*='paper_size']").change(function(event){
        	var selected_paper_size = $(this).val(),
        	document_id = this.parentNode.parentNode.id;
        	$("select[name*='["+document_id+"][paper_type]']").load(
        		url_for_load_paper_types, 
        		{selected_paper_size: selected_paper_size},
        		function(){
        			$(this).attr("disabled",false);
        			$("select[name*='["+document_id+"][margins]']").attr("disabled",false);
        			$(this).change();
        		}
        		);
        	
        });


        //change handler for load print margins
        $("select[name*='paper_type']").change(function(event){
        	var document_id = this.parentNode.parentNode.id, 
        	selected_paper_type = $(this).val(),
        	selected_paper_size = $("select[name*='["+document_id+"][paper_size]']").val();
        	$("select[name*='["+document_id+"][margins]']").load(
        		url_for_load_print_margins, 
        		{selected_paper_size: selected_paper_size, selected_paper_type: selected_paper_type},
        		function(){
        			$(this).attr("disabled",false);
        			$(this).change(); //for update document price
        			validate_documents();
        		}
        		);
        	
        })

        //подключение хендлеров по управлению ценой по состоянию margins 
        $("select[name*='margins']:not([class='with_priceEventHandler'])").addClass("with_priceEventHandler").bind('change', function(event){
          var document_id = this.parentNode.parentNode.id, 
          	  selected_margins = $(this).val(),
          	  selected_paper_size = $("select[name*='["+document_id+"][paper_size]']").val(),
          	  selected_paper_type = $("select[name*='["+document_id+"][paper_type]']").val();
          	  selected_quantity = $("input[name*='["+document_id+"][quantity]']").val();
          $.post( url_for_update_document, 
          	{id: document_id, paper_size: selected_paper_size, paper_type: selected_paper_type, margins: selected_margins, quantity: selected_quantity},
          	function() {
               $.post( url_for_update_order, {id: order_id} );
  				}
          	 	);
        });
        
		//change handler for quantity
        $("input[name*='quantity']:not([class='with_priceEventHandler'])").addClass("with_priceEventHandler").bind('change', function(event){
          var selected_quantity = $(this).val(),
              document_id = this.parentNode.parentNode.id;
          selected_quantity = validate(parseInt(selected_quantity));
          $(this).val(selected_quantity);
          $.post( url_for_update_document, 
          	{id: document_id, quantity: selected_quantity},
          	function() {
               $.post( url_for_update_order, {id: order_id} );
  				}
          	);
        });


        //обновление цены после удаления одного документа
        $("a.link_delete_docfile:not([handler-status='with_priceEventHandler'])").attr('handler-status', 'with_priceEventHandler').bind('click', function(event){
          setTimeout(function(){$.post( url_for_update_order, {id: order_id} )}, 1000);
          setTimeout(function(){validate_documents()}, 1000);
          
        });

        //работа переключателя количества файлов
        $("button.increase:not([class*='with_priceEventHandler'])").addClass("with_priceEventHandler").bind('click', function(event){
          var selected_input_quantity = $(this).siblings("input[id*='quantity']");
          new_value = parseInt(selected_input_quantity.val()) + 1 ;
          new_value = validate(new_value);
          selected_input_quantity.val(new_value);
          selected_input_quantity.change();
        });
        $("button.decrease:not([class*='with_priceEventHandler'])").addClass("with_priceEventHandler").bind('click', function(event){
          var selected_input_quantity = $(this).siblings("input[id*='quantity']");
          new_value = parseInt(selected_input_quantity.val()) - 1 ;
          new_value = validate(new_value);
          selected_input_quantity.val(new_value);
          selected_input_quantity.change();
        });
        
        //delete error messages
        if ($("label[for='quantity_documents_for_validate']")) {
        	$("label[for='quantity_documents_for_validate']").fadeOut("fast");
        };
        

        //проверка значения количества файлов для печати
        function validate(value){
          if (value < 1 || isNaN(value) == true) {
            value = 1;
          } else if (value > 999) {
            value = 999;
          }
          return value
        };
        
        //cчитаем кол-во документов в форме
        function validate_documents(){
        	var quantity_documents = $("tr.document").length;
        	if (quantity_documents == 0){
        		$("input#quantity_documents_for_validate").val('');
        	} else {
        		$("input#quantity_documents_for_validate").val(quantity_documents);
        	}
        };

      }
    });
  </script>
<% end %>

<%= form_for @order, :url => order_path(@order), :html => { :method => :put, :id => @order.id, :class => "admin_print_order"} do |order| -%>
  <h2 class="orange">Загруженные файлы</h2>
  
  	<%= render :partial => 'filelist', :locals => {:order => @order} %>
  
  <h2 class="orange">Адрес и время доставки</h2>
  
  <%= render :partial => 'delivery_order_edit', :locals => {:order => order, :current_order => @order} %>
  
  <div class="total_cost_order">
    <%= h (number_to_currency(@order.cost, :unit => "коп.", :separator => " руб. ")) %>
  </div>
  <div class="total_cost_order_label">
    Итого:
  </div>
  <div class="fl_clear"></div>

  	<br />
  	
    <h2 class="orange">Обновление статуса</h2>
	<%= render :partial => 'form', :locals => {:f => order} %>

	<div class="submit_area">
	 <%= submit_tag 'Сохранить изменения', :class => 'submit'  %>
	 <%= link_to 'Отмена', admin_orders_path, :class => 'button_style' %>
	</div>
<% end -%>
 